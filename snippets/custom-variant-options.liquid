{% comment %}
  Renders product variant options

  Accepts:
  - product: {Object} product object.
  - option: {Object} current product_option object.
  - block: {Object} block object.
  - picker_type: {String} type of picker to dispay


  Usage:
  {% render 'product-variant-options',
    product: product,
    option: option,
    block: block
    picker_type: picker_type
  %}
{% endcomment %}
{%- liquid
  assign product_form_id = 'product-form-' | append: section.id
  assign variants = product.variants
-%}

{%- for value in option.values -%}
  {%- for variant in variants -%}
    {%- if variant.title == value -%}
      {% assign primary_color = variant.metafields.custom.primarycolor %}
      {% assign secondary_color = variant.metafields.custom.secondarycolor %}

      {%- liquid
        assign swatch_focal_point = null
        if value.swatch.image
          assign image_url = value.swatch.image | image_url: width: 50
          assign swatch_value = 'url(' | append: image_url | append: ')'
          assign swatch_focal_point = value.swatch.image.presentation.focal_point
        elsif value.swatch.color
          assign swatch_value = 'rgb(' | append: value.swatch.color.rgb | append: ')'
        else
          assign swatch_value = null
        endif

        assign option_disabled = true
        if value.available
          assign option_disabled = false
        endif
      -%}

      {%- capture input_id -%}
                {{ section.id }}-{{ option.position }}-{{ forloop.index0 -}}
            {%- endcapture -%}

      {%- capture input_name -%}
                {{ option.name }}-{{ option.position }}
            {%- endcapture -%}

      {%- capture input_dataset -%}
                data-product-url="{{ value.product_url }}"
                data-option-value-id="{{ value.id }}"
            {%- endcapture -%}

      {%- capture label_unavailable -%}
                <span class="visually-hidden label-unavailable">
                {{- 'products.product.variant_sold_out_or_unavailable' | t -}}
                </span>
            {%- endcapture -%}

      {%- if picker_type == 'swatch' -%}
        {%- capture help_text -%}
                <span class="visually-hidden">{{ value | escape }}</span>
                {{ label_unavailable }}
                {%- endcapture -%}
        {%
          render 'swatch-input',
          id: input_id,
          name: input_name,
          value: value | escape,
          swatch: value.swatch,
          product_form_id: product_form_id,
          checked: value.selected,
          visually_disabled: option_disabled,
          shape: block.settings.swatch_shape,
          help_text: help_text,
          additional_props: input_dataset
        %}
      {%- elsif picker_type == 'button' -%}
        <input
          type="radio"
          id="{{ input_id }}"
          name="{{ input_name | escape }}"
          value="{{ value | escape }}"
          form="{{ product_form_id }}"
          {% if value.selected %}
            checked
          {% endif %}
          {% if matching_variant.available == false %}
            disabled class="disabled"
          {% endif %}
          {{ input_dataset }}
          style="display: none;"
          {% comment %} Hide the default radio button {% endcomment %}
        >
        <label for="{{ input_id }}" class="swatch-button-label">
          {% if primary_color and secondary_color -%}
            <div class="swatch-button">
              <div
                class="swatch-half swatch-half-1"
                style="background-color: {{ primary_color }};"
              ></div>
              <div
                class="swatch-half swatch-half-2"
                style="background-color: {{ secondary_color }};"
              ></div>
            </div>
          {%- else -%}
            {{ value }}
            {% comment %} Fallback if colors are not defined {% endcomment %}
          {%- endif -%}
          {{ label_unavailable }}
        </label>

        <style>
          .swatch-button-label {
            position: relative;
            display: inline-flex; /* Use flexbox for alignment */
            align-items: center;
            justify-content: center;
            width: 40px; /* Adjust size as needed */
            height: 40px; /* Adjust size as needed */
            margin: 5px;
            cursor: pointer;
          }

          .swatch-button {
            width: 100%;
            height: 100%;
            border-radius: 50%; /* Make it a circle */
            border: 1px solid #ccc;
            overflow: hidden; /* Ensure colors stay within the circle */
          }

          .swatch-half {
            position: absolute;
            width: 50%; /* Each half takes up half the width */
            height: 100%;
          }

          .swatch-half-1 {
            left: 0; /* Position the first half on the left */
            clip-path: polygon(0 0, 100% 0, 0 100%);
          }

          .swatch-half-2 {
            right: 0; /* Position the second half on the right */
            clip-path: polygon(100% 0, 100% 100%, 0 100%);
          }

          input[type='radio']:checked + .swatch-button-label .swatch-button {
            border: 2px solid #000; /* Highlight selected swatch */
          }
        </style>
      {%- elsif picker_type == 'dropdown' or picker_type == 'swatch_dropdown' -%}
        <option
          id="{{ input_id }}"
          value="{{ value | escape }}"
          {% if value.selected %}
            selected="selected"
          {% endif %}
          {% if swatch_value and picker_type == 'swatch_dropdown' %}
            data-option-swatch-value="{{ swatch_value }}"
            {% if swatch_focal_point %}
              data-option-swatch-focal-point="{{ swatch_focal_point }}"
            {% endif %}
          {% endif %}
          {{ input_dataset }}
        >
          {% if option_disabled -%}
            {{- 'products.product.value_unavailable' | t: option_value: value -}}
          {%- else -%}
            {{- value -}}
          {%- endif %}
        </option>
      {%- endif -%}
    {%- endif -%}
  {%- endfor -%}
{%- endfor -%}
