{% comment %}
    Renders color swatch options for product variants
  Accepts:
  - product: {Object} product object.
  - option: {Object} current product_option object.
  - block: {Object} block object.
{% endcomment %}

{%- assign swatchType = settings.swatchType -%}
{%- assign swatchStyle = settings.swatchStyle -%}
{%- assign swatchSize = settings.swatchSize -%}
{%- assign swatchColors = settings.swatchColors | newline_to_br | split: '<br />' -%}

<style>
  .color-swatch {
    width: {{ swatchSize }}px;
    height: {{ swatchSize }}px;
    display: inline-block;
    margin-right: 10px;
    cursor: pointer;
    border: 1px solid #d6d6d6;
    position: relative;
  }
  .color-swatch.round {
    border-radius: 50%;
  }
  .color-swatch.square-round-corners {
    border-radius: 5px;
  }
  .color-swatch.portrait {
    height: {{ swatchSize | times: 1.5 }}px;
  }
  .color-swatch.selected:after {
    content: '';
    position: absolute;
    top: -3px;
    left: -3px;
    right: -3px;
    bottom: -3px;
    border: 2px solid #000;
    border-radius: inherit;
  }
  .color-swatch input[type="radio"] {
    display: none;
  }
</style>

<div class="color-swatch-container">
  {%- for value in option.values -%}
    {%- assign color_swatch_id = value | handle -%}
    {%- assign swatch_style = '' -%}

    {%- if swatchType == 'color' -%}
      {%- for color in swatchColors -%}
        {%- assign color_data = color | split: ':' -%}
        {%- if color_data.first == value -%}
          {%- assign swatch_style = 'background-color:' | append: color_data.last -%}
          {%- break -%}
        {%- endif -%}
      {%- endfor -%}
    {%- elsif swatchType == 'variantImage' -%}
      {%- for variant in product.variants -%}
        {%- if variant.options contains value -%}
          {%- assign swatch_style = 'background-image: url('
            | append: variant.image
            | image_url: width: swatchSize
            | append: ')'
          -%}
          {%- break -%}
        {%- endif -%}
      {%- endfor -%}
    {%- endif -%}

    <label
      for="{{ color_swatch_id }}"
      class="color-swatch {{ swatchStyle }} {% if option.selected_value == value %}selected{% endif %}"
      style="{{ swatch_style }}"
    >
      <input
        type="radio"
        id="{{ color_swatch_id }}"
        name="{{ option.name }}"
        value="{{ value | escape }}"
        {% if option.selected_value == value %}
          checked
        {% endif %}
        data-index="option{{ option.position }}"
      >
      <span class="visually-hidden">{{ value }}</span>
    </label>
  {%- endfor -%}
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    var swatchContainer = document.querySelector('.color-swatch-container');
    var swatches = swatchContainer.querySelectorAll('.color-swatch');
    var selectedDisplay = document.querySelector('#selected-{{ option.name | handle }}');

    swatches.forEach(function(swatch) {
      swatch.addEventListener('click', function() {
        var input = this.querySelector('input[type="radio"]');
        var value = input.value;

        // Update selected swatch
        swatches.forEach(function(s) { s.classList.remove('selected'); });
        this.classList.add('selected');

        // Update hidden select
        var selectElement = document.querySelector('select[name="{{ option.name | handle }}"]');
        if (selectElement) {
          selectElement.value = value;
          selectElement.dispatchEvent(new Event('change', { bubbles: true }));
        }

        // Update display
        if (selectedDisplay) {
          selectedDisplay.textContent = " " + value;
        }

        // Trigger variant change event
        document.dispatchEvent(new CustomEvent('variant:change', {
          detail: {
            option: '{{ option.name }}',
            value: value
          }
        }));
      });
    });
  });
</script>
