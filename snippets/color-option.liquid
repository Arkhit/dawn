{% comment %}
  Renders product variant options

  Accepts:
  - product: {Object} product object.
  - option: {Object} current product_option object.
  - block: {Object} block object.

  Usage:
  {% render 'color-option',
    product: product,
    option: option,
    block: block
  %}
{% endcomment %}
{%- liquid
  assign variants_available_arr = product.variants | map: 'available'
  assign variants_option1_arr = product.variants | map: 'option1'
  assign variants_option2_arr = product.variants | map: 'option2'
  assign variants_option3_arr = product.variants | map: 'option3'

  assign product_form_id = 'product-form-' | append: section.id

  assign swatchType = settings.swatchType
  assign swatchStyle = settings.swatchStyle
  assign swatchSize = settings.swatchSize
  assign swatchColors = settings.swatchColors | newline_to_br | split: '<br />'
-%}

<style>
  /* ... (keep the existing styles) ... */
</style>

<fieldset class="js product-form__input">
  <legend class="form__label">{{ option.name }}</legend>
  <div class="radio-wrapper js product-form__input">
    {%- for value in option.values -%}
      {%- liquid
        assign option_disabled = true

        for option1_name in variants_option1_arr
          case option.position
            when 1
              if variants_option1_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                assign option_disabled = false
              endif
            when 2
              if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                assign option_disabled = false
              endif
            when 3
              if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == product.selected_or_first_available_variant.option2 and variants_option3_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                assign option_disabled = false
              endif
          endcase
        endfor
      -%}

      <input
        type="radio"
        id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
        name="options[{{ option.name | escape }}]"
        value="{{ value | escape }}"
        form="{{ product_form_id }}"
        {% if option.selected_value == value %}
          checked="checked"
        {% endif %}
        {% if option_disabled %}
          disabled="disabled"
        {% endif %}
      >

      {%- if swatchType == 'variantImage' -%}
        <label
          for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
          class="color-swatch variant-swatch {% if option_disabled %}disabled{% endif %} {% case swatchStyle %}{% when "round" %}round{% when "square-round-corners" %}round-corners{% endcase %}"
          data-option-value="{{ value | escape }}"
          style="
            background-image: url(
              {%- liquid
                assign optionIndex = option.position | minus: 1
                for variant in product.variants
                  if variant.options[optionIndex] == value
                    assign swatchSizePortrait = swatchSize | times: 2
                    echo variant.image | image_url: width: swatchSizePortrait
                    break
                  endif
                endfor
              -%}
            );
          "
        >
          <span class="visually-hidden">{{ value }}</span>
        </label>
      {%- else -%}
        {%- liquid
          for colorData in swatchColors
            assign colorDataArr = colorData | split: ':'
            assign ruleName = colorDataArr[0] | strip
            if value == ruleName
              assign colorCodes = colorDataArr[1] | strip | split: '#'
              assign colorNumber = 0 | plus: colorCodes.size
              break
            endif
          endfor
        -%}
        <label
          for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
          class="color-swatch {% if option_disabled %}disabled{% endif %} {% case swatchStyle %}{% when "round" %}round{% when "square-round-corners" %}round-corners{% endcase %}"
          data-option-value="{{ value | escape }}"
          style="
            {%- case colorNumber -%}
              {%- when 2 -%}
                background-color: #{{ colorCodes[1] }}
              {%- when 3 -%}
                background: linear-gradient(135deg, #{{ colorCodes[1] }} 50%, #{{ colorCodes[2] }} 50%);
              {%- when 4 -%}
                background: linear-gradient(to right,#{{ colorCodes[1] }} 33%,#{{ colorCodes[2] }} 33%,#{{ colorCodes[2] }} 66%, #{{ colorCodes[3] }} 66%);
              {%- else -%}
                background-image:url({{ colorCodes[0] | downcase | replace: ' ', '-' | file_img_url }})
            {%- endcase -%}
            ;
          "
        >
          <span class="visually-hidden">{{ value }}</span>
        </label>
        {%- assign colorCodes = '' -%}
      {%- endif -%}
    {%- endfor -%}
  </div>
</fieldset>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    var productForm = document.querySelector('form[action="/cart/add"]');
    var colorSwatches = document.querySelectorAll('.color-swatch');

    colorSwatches.forEach(function(swatch) {
      swatch.addEventListener('click', function() {
        var optionValue = this.getAttribute('data-option-value');
        var associatedRadio = document.querySelector('input[type="radio"][value="' + optionValue + '"]');

        if (associatedRadio && !associatedRadio.disabled) {
          associatedRadio.checked = true;
          associatedRadio.dispatchEvent(new Event('change', { bubbles: true }));

          // Trigger form change event
          if (productForm) {
            productForm.dispatchEvent(new Event('change', { bubbles: true }));
          }
        }
      });
    });
  });
</script>
