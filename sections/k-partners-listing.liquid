{{ 'k-partners-listing.css' | asset_url | stylesheet_tag }}

{%- style -%}
    #shopify-section-{{ section.id }} {
        --buttons-radius-outset: 40px;
        --buttons-radius: 40px;
        z-index: 2;
        position: relative;
    }
    .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
        padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
    }

    @media screen and (min-width: 750px) {
        .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top }}px;
        padding-bottom: {{ section.settings.padding_bottom }}px;
        }
    }
{%- endstyle -%}
{% assign page_country = section.settings.country %}
{% assign us_state = page.metafields.custom['country_reference'].value.is_us_state %}

<div class="page-width section-{{ section.id }}-padding isolate{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}" data-cascade>
    {% comment %} {%- unless section.settings.title == blank -%}
        <div class="title-wrapper-with-link title-wrapper--self-padded-mobile title-wrapper--no-top-margin">
            <h1 class="title main-title inline-richtext {{ section.settings.heading_size }}">
            {{ section.settings.title | replace: '[country]', page_country }}
            </h1>
        </div>
    {%- endunless -%} {% endcomment %}
    {% liquid
        assign one_column_only = false

        for block in section.blocks
            assign it = block.settings.items
            assign m =  page.metafields.custom[it].value
            assign p = 0

            for u in page.metafields.custom[it].value
                assign p = p | plus: 1
            endfor

            if p == 0
                assign one_column_only = true
                break
            endif
        endfor
    %}

    {% if section.settings.back_to_link and section.settings.back_to_text %}
        <div class="back-to-link">
            <a href="{{ section.settings.back_to_link }}" class="link underlined-link accent-link"><span class="icon-tiny icon-flip">{% render 'icon-tiny-arrow' %}</span> {{ section.settings.back_to_text }}</a>
        </div>
    {% endif %}
    <div class="grid {% if one_column_only == true %}justify-center one-col-grid{% endif %} grid--1-col grid--2-col-tablet sub-grid">
        {% for block in section.blocks %}
            {% assign items = block.settings.items %}
            {% assign metaobject =  page.metafields.custom[items].value %}
            {% assign highest_ratio = 3.25 %}

            {% liquid
                assign value_count = 0

                for i in metaobject
                    assign value_count = value_count | plus: 1
                endfor
            %}

            {% unless value_count == 0 %}
                <div class="grid__item {{ items }}-column">
                    {%- unless block.settings.title == blank -%}
                        <div class="title-wrapper-with-link title-wrapper--self-padded-mobile title-wrapper--no-top-margin">
                            <h2 class="title block-title inline-richtext h2">
                                {{ block.settings.title | replace: '[country]', page_country }}
                            </h2>
                            {% if block.settings.subtitle != blank %}
                                <div class="description-column rte"><p>{{ block.settings.subtitle | replace: '[country]', page_country }}</p></div>
                            {% endif %}
                        </div>
                    {%- endunless -%}
                    
                    {%- for object in metaobject -%}
                            {% if items contains 'online_reseller' %}
                                    {% assign name = object.name %}
                                    {% assign link = object.link_to_buy %}
                                    
                                    <div class="tab-flex align-end global-media-settings">
                                        <div class="t-flex-column">
                                            {% if object.logo != blank %}
                                                    <div
                                                        class="no-aspect">
                                                        {%- liquid
                                                            assign number_of_columns = 1
                                                            assign number_of_columns_mobile = 1
                                                            assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                                                            assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                                                            assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                                                            assign image_width = 1
                                                        -%}
                                                        {% capture sizes %}
                                                            (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} /  {{ number_of_columns }}),
                                                            (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                                                            (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                                                            calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                                                        {% endcapture %}
                                                        {{
                                                            object.logo
                                                            | image_url: width: 300
                                                            | image_tag:
                                                            loading: 'lazy',
                                                            widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                                                            sizes: sizes
                                                        }}
                                                        <a href="{{ link }}" target="_blank" class="logo-link"><span class="visually-hidden">{{ name }}</span></a>
                                                    </div>
                                            {% else %}
                                                {% render 'icon-setting' %}
                                                <a href="{{ link }}" target="_blank" class="logo-link"><span class="visually-hidden">{{ name }}</span></a>
                                            {% endif %}
                                        </div>
                                        <div class="t-flex-column">
                                            <a href="{{ link }}" target="_blank" class="link link-over accent-link"> {{ block.settings.link_label | replace: '[name]', name }} <span class="icon-tiny">{% render 'icon-new-tab' %}</span></a>
                                        </div>
                                    </div>
                            {% elsif items contains 'installer' %}
                                {% assign services = object.services_offered %}
                                {% assign name = object.name %}
                                {% assign tagline = object.tagline_description %}
                                {% assign partner_id = object.partner_id %}

                                {% assign hubspot_link = section.settings.hubspot_form_link %}

                                {% if partner_id != blank %}
                                    {% assign hubspot_link = section.settings.hubspot_form_link | append: '?partner_id=' | append: partner_id %}
                                {% endif %}

                                <details
                                    id="Details-{{ block.id }}-{{ forloop.index }}"
                                    class="tab-detail"
                                >
                                    <summary id="Summary-{{ block.id }}-{{ forloop.index }}">
                                        <div class="tab-flex align-center global-media-settings">
                                            <div class="t-flex-column {% if object.logo == blank %}square-column{% endif %}">
                                                {% if object.logo != blank %}
                                                        <div
                                                            class="no-aspect" data-width="{{object.logo.width }}">
                                                            {%- liquid
                                                                assign number_of_columns = 1
                                                                assign number_of_columns_mobile = 1
                                                                assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                                                                assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                                                                assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                                                                assign image_width = 1
                                                            -%}
                                                            {% capture sizes %}
                                                                (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} /  {{ number_of_columns }}),
                                                                (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                                                                (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                                                                calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                                                            {% endcapture %}
                                                            {{
                                                                object.logo
                                                                | image_url: width: 300
                                                                | image_tag:
                                                                widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                                                                sizes: sizes
                                                            }}
                                                        </div>
                                                {% else %}
                                                    <div class="placeholder-tab-img">
                                                        {% render 'icon-setting' %}
                                                    </div>
                                                {% endif %}
                                            </div>
                                            <div class="t-flex-column">
                                                <h3 class="title inline-richtext h2">{{ name }}</h3>
                                                {% if object.city_region_service_area != blank %}
                                                    <div class="description-column rte">
                                                        <p>{{ object.city_region_service_area }}</p>
                                                    </div>
                                                {% endif %}
                                            </div>
                                        </div>
                                        <span class="tab-arrow">
                                            {% render 'icon-caret' %}
                                        </span>
                                    </summary>
                                    <div
                                        class="tab__content global-media-settings"
                                        id="CollapsibleAccordion-{{ block.id }}-{{ forloop.index }}"
                                        role="region"
                                        aria-labelledby="Summary-{{ block.id }}-{{ forloop.index }}"
                                    >

                                        <div class="inner-content">
                                            <h3 class="title inline-richtext h2">{{ name }}</h3>
                                                {% if object.logo != blank %}
                                                    <div class="tab-logo">
                                                        <div
                                                            class="no-aspect" data-width="{{ object.logo.width }}">
                                                            {%- liquid
                                                                assign number_of_columns = 1
                                                                assign number_of_columns_mobile = 1
                                                                assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                                                                assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                                                                assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                                                                assign image_width = 1
                                                            -%}
                                                            {% capture sizes %}
                                                                (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} /  {{ number_of_columns }}),
                                                                (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                                                                (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                                                                calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                                                            {% endcapture %}
                                                            {{
                                                                object.logo
                                                                | image_url: width: 300
                                                                | image_tag:
                                                                widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                                                                sizes: sizes
                                                            }}
                                                            <a href="#" target="_blank" class="logo-link"><span class="visually-hidden">{{ name }}</span></a>
                                                        </div>
                                                    </div>
                                                {% else %}
                                                    <div class="tab-logo">
                                                        <div class="placeholder-tab-img">
                                                            {% render 'icon-setting' %}
                                                            <a href="#" target="_blank" class="logo-link"><span class="visually-hidden">{{ name }}</span></a>
                                                        </div>
                                                    </div>
                                                {% endif %}
                                                {% if object.city_region_service_area != blank %}
                                                    <div class="description-column rte service-area">
                                                        <p>{{ object.city_region_service_area }}</p>
                                                    </div>
                                                {% endif %}
                                                {% if tagline != blank %}
                                                    <div class="rte tagline">
                                                        <p>{{ tagline }}</p>
                                                    </div>
                                                {% endif %}
                                            {% unless services.value.size == 0 or services.value.size == blank %}
                                                {% if section.settings.tab_subtitle %}
                                                    <h3 class="title inline-richtext h3">{{ section.settings.tab_subtitle }}</h3>
                                                {% endif %}
                                                <ul class="list-style-type">
                                                    {% for i in services.value %}
                                                        <li>{{ i }}</li>
                                                    {% endfor %}
                                                </ul>
                                            {% endunless %}
                                            {% if section.settings.tab_button != blank %}
                                                <a href="{{ hubspot_link }}" data-id="hbspt-form-{{ forloop.index }}" class="button button--primary button--small form-opener">{{ section.settings.tab_button }}</a>
                                            {% endif %}
                                        </div>
                                        {% if hubspot_link %}
                                            <div class="hubspot-form-wrapper" hidden></div>
                                        {% endif %}
                                        <span class="close-tab">
                                            {% render 'icon-close-tab' %}
                                        </span>
                                    </div>
                                </details>
                            {% endif %}
                    {% endfor %} 
                </div>
            {% endunless %}
        {% endfor %}
    </div>
</div>
<script src="{{ 'k-partners-listing.js' | asset_url }}" defer></script>

{% schema %}
{
    "name": "Partners Listing",
    "class": "section k-partners-listing",
    "tag": "section",
    "enabled_on": {
        "templates": ["page"]
    },
    "blocks": [
        {
            "type": "column",
            "name": "Column",
            "limit": 2,
            "settings": [
                {
                    "type": "inline_richtext",
                    "id": "title",
                    "default": "Multicolumn",
                    "label": "t:sections.multicolumn.settings.title.label",
                    "info": "[country] as Metaobject's country reference"
                },
                {
                    "type": "select",
                    "id": "heading_size",
                    "options": [
                    {
                        "value": "h2",
                        "label": "t:sections.all.heading_size.options__1.label"
                    },
                    {
                        "value": "h1",
                        "label": "t:sections.all.heading_size.options__2.label"
                    },
                    {
                        "value": "h0",
                        "label": "t:sections.all.heading_size.options__3.label"
                    }
                    ],
                    "default": "h1",
                    "label": "t:sections.all.heading_size.label"
                },
                {
                    "type": "inline_richtext",
                    "id": "subtitle",
                    "default": "Multicolumn",
                    "label": "Subheading",
                    "info": "[country] as Metaobject's country reference"
                },
                {
                    "type": "text",
                    "id": "link_label",
                    "label": "Link Label"
                },
                {
                    "type": "select",
                    "id": "items",
                    "options": [
                    {
                        "value": "installers",
                        "label": "Installers"
                    },
                    {
                        "value": "online_resellers",
                        "label": "Resellers"
                    }
                    ],
                    "default": "online_resellers",
                    "label": "Render As"
                }
            ]
        }
    ],
    "settings": [
        {
            "type": "text",
            "id": "country",
            "label": "Country"
        },
        {
        "type": "inline_richtext",
        "id": "title",
        "default": "Multicolumn",
        "label": "t:sections.multicolumn.settings.title.label",
        "info": "[country] as Metaobject's country reference"
        },
        {
        "type": "select",
        "id": "heading_size",
        "options": [
            {
            "value": "h2",
            "label": "t:sections.all.heading_size.options__1.label"
            },
            {
            "value": "h1",
            "label": "t:sections.all.heading_size.options__2.label"
            },
            {
            "value": "h0",
            "label": "t:sections.all.heading_size.options__3.label"
            }
        ],
        "default": "h1",
        "label": "t:sections.all.heading_size.label"
        },
        {
            "type": "header",
            "content": "Tab Contents"
        },
        {
            "type": "text",
            "id": "tab_subtitle",
            "label": "Tab Subheading"
        },
        {
            "type": "text",
            "id": "tab_button",
            "label": "Tab Button label"
        },
        {
            "type": "url",
            "id": "hubspot_form_link",
            "label": "Hubspot form link"
        },
        {
            "type": "url",
            "id": "back_to_link",
            "label": "Back to index link"
        },
        {
            "type": "text",
            "id": "back_to_text",
            "label": "Back to index page"
        },
        {
        "type": "select",
        "id": "color_scheme",
        "options": [
            {
            "value": "accent-1",
            "label": "t:sections.all.colors.accent_1.label"
            },
            {
            "value": "accent-2",
            "label": "t:sections.all.colors.accent_2.label"
            },
            {
            "value": "background-1",
            "label": "t:sections.all.colors.background_1.label"
            },
            {
            "value": "background-2",
            "label": "t:sections.all.colors.background_2.label"
            },
            {
            "value": "inverse",
            "label": "t:sections.all.colors.inverse.label"
            }
        ],
        "default": "background-1",
        "label": "t:sections.all.colors.label"
        },
        {
        "type": "header",
        "content": "t:sections.all.padding.section_padding_heading"
        },
        {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_top",
        "default": 36
        },
        {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_bottom",
        "default": 36
        }
    ],
    "presets": [
        {
            "name": "Partners Listing"
        }
    ]
}
{% endschema %}