{{ 'k-partners-listing.css' | asset_url | stylesheet_tag }}

{%- style -%}
    #shopify-section-{{ section.id }} {
        --buttons-radius-outset: 40px;
        --buttons-radius: 40px;
        z-index: 2;
        position: relative;
    }
    .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
        padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
    }

    @media screen and (min-width: 750px) {
        .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top }}px;
        padding-bottom: {{ section.settings.padding_bottom }}px;
        }
    }
{%- endstyle -%}

{%- liquid

    assign metaobject_size = 0
    assign page_country = section.settings.country
    assign page_state = section.settings.state
  
    for i in metaobject
      if i.country.value.country_name == country
        assign metaobject_size = metaobject_size | plus: 1
      endif
    endfor
-%}

<div class="page-width section-{{ section.id }}-padding isolate{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}" data-cascade>
    {%- unless section.settings.title == blank -%}
        <div class="title-wrapper-with-link title-wrapper--self-padded-mobile title-wrapper--no-top-margin">
            <h1 class="title main-title inline-richtext {{ section.settings.heading_size }}">
            {{ section.settings.title | replace: '[country]', page_country }}
            </h1>
        </div>
    {%- endunless -%}
    <div class="grid grid--1-col grid--2-col-tablet sub-grid">
        {% for block in section.blocks %}
            {% assign meta_name = block.settings.meta_name %}
            {% assign metaobject =  shop.metaobjects[meta_name].values %}
            {% assign highest_ratio = 3.25 %}

            <div class="grid__item {{ meta_name }}-column">
                {%- unless block.settings.title == blank -%}
                    <div class="title-wrapper-with-link title-wrapper--self-padded-mobile title-wrapper--no-top-margin">
                        <h2 class="title main-title inline-richtext h2">
                            {{ block.settings.title | replace: '[country]', page_country }}
                        </h2>
                        {% if block.settings.subtitle != blank %}
                            <div class="description-column rte"><p>{{ block.settings.subtitle }}</p></div>
                        {% endif %}
                    </div>
                {%- endunless -%}
                
                {%- for object in metaobject -%}
                        {% assign country = block.settings.country %}
                        {% assign state_country = object.country.value.country_name %}
                        {% assign object_states = object.states.value | where: 'state_name', page_state %}

                        {% if meta_name contains 'online_reseller' %}

                            {% if state_country == page_country %}
                                {% assign state_country = object.country.value.country_name %}
                                {% assign name = object.name %}
                                {% assign link = object.link_to_buy %}
                                
                                <div class="tab-flex align-end global-media-settings">
                                    <div class="t-flex-column">
                                        {% if object.logo != blank %}
                                            <div
                                                class="no-aspect">
                                                {%- liquid
                                                    assign number_of_columns = 1
                                                    assign number_of_columns_mobile = 1
                                                    assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                                                    assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                                                    assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                                                    assign image_width = 1
                                                -%}
                                                {% capture sizes %}
                                                    (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} /  {{ number_of_columns }}),
                                                    (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                                                    (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                                                    calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                                                {% endcapture %}
                                                {{
                                                    object.logo
                                                    | image_url: width: 300
                                                    | image_tag:
                                                    loading: 'lazy',
                                                    widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                                                    sizes: sizes
                                                }}
                                            </div>
                                        {% else %}
                                            {% render 'icon-setting' %}
                                        {% endif %}
                                    </div>
                                    <div class="t-flex-column">
                                        <a href="{{ link }}" class="link link-over accent-link">{{ block.settings.link_label | replace: '[name]', name }} <span class="icon-tiny">{% render 'icon-tiny-arrow' %}</span></a>
                                    </div>
                                </div>
                            {% endif %}
                        {% elsif meta_name contains 'installer' %}
                            {% if state_country == page_country %}
                                {% capture installer_block %}
                                    {% assign services = object.services_offered %}
                                    {% assign name = object.name %}
                                    {% assign link = object.link_to_rfq %}

                                    <details
                                        id="Details-{{ block.id }}-{{ meta_name }}-{{ forloop.index }}"
                                        class="tab-detail"
                                    >
                                        <summary id="Summary-{{ block.id }}-{{ meta_name }}-{{ forloop.index }}">
                                            <div class="tab-flex align-center global-media-settings">
                                                <div class="t-flex-column {% if object.logo == blank %}square-column{% endif %}">
                                                    {% if object.logo != blank %}
                                                        <div
                                                            class="no-aspect" data-width="{{object.logo.width }}">
                                                            {%- liquid
                                                                assign number_of_columns = 1
                                                                assign number_of_columns_mobile = 1
                                                                assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                                                                assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                                                                assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                                                                assign image_width = 1
                                                            -%}
                                                            {% capture sizes %}
                                                                (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} /  {{ number_of_columns }}),
                                                                (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                                                                (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                                                                calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                                                            {% endcapture %}
                                                            {{
                                                                object.logo
                                                                | image_url: width: 300
                                                                | image_tag:
                                                                widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                                                                sizes: sizes
                                                            }}
                                                        </div>
                                                    {% else %}
                                                        <div class="placeholder-tab-img">
                                                            {% render 'icon-setting' %}
                                                        </div>
                                                    {% endif %}
                                                </div>
                                                <div class="t-flex-column">
                                                    <h3 class="title inline-richtext h2">{{ name }}</h3>
                                                    {% if object.city_region_service_area != blank %}
                                                        <div class="description-column rte">
                                                            <p>{{ object.city_region_service_area }},{{ state_country }}</p>
                                                        </div>
                                                    {% endif %}
                                                </div>
                                            </div>
                                            <span class="tab-arrow">
                                                {% render 'icon-caret' %}
                                            </span>
                                        </summary>
                                        <div
                                            class="tab__content global-media-settings"
                                            id="CollapsibleAccordion-{{ block.id }}-{{ meta_name }}-{{ forloop.index }}"
                                            role="region"
                                            aria-labelledby="Summary-{{ block.id }}-{{ meta_name }}-{{ forloop.index }}"
                                        >
                                            <h3 class="title inline-richtext h2">{{ name }}</h3>
                                                {% if object.logo != blank %}
                                                    <div class="tab-logo">
                                                        <div
                                                            class="no-aspect" data-width="{{ object.logo.width }}">
                                                            {%- liquid
                                                                assign number_of_columns = 1
                                                                assign number_of_columns_mobile = 1
                                                                assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                                                                assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                                                                assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                                                                assign image_width = 1
                                                            -%}
                                                            {% capture sizes %}
                                                                (min-width: {{ settings.page_width }}px) calc(({{ settings.page_width }}px - {{ grid_space_desktop }}) * {{ image_width }} /  {{ number_of_columns }}),
                                                                (min-width: 990px) calc((100vw - {{ grid_space_desktop }}) * {{ image_width }} / {{ number_of_columns }}),
                                                                (min-width: 750px) calc((100vw - {{ grid_space_tablet }}) * {{ image_width }} / {{ number_of_columns_mobile }}),
                                                                calc((100vw - {{ grid_space_mobile }}) * {{ image_width }} / {{ number_of_columns_mobile }})
                                                            {% endcapture %}
                                                            {{
                                                                object.logo
                                                                | image_url: width: 300
                                                                | image_tag:
                                                                widths: '50, 75, 100, 150, 200, 300, 400, 500, 750, 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3200',
                                                                sizes: sizes
                                                            }}
                                                        </div>
                                                    </div>
                                                {% else %}
                                                    <div class="tab-logo">
                                                        <div class="placeholder-tab-img">
                                                            {% render 'icon-setting' %}
                                                        </div>
                                                    </div>
                                                {% endif %}
                                            {% if section.settings.tab_subtitle %}
                                                <h3 class="title inline-richtext h3">{{ section.settings.tab_subtitle }}</h3>
                                            {% endif %}
                                            {% unless services.value.size == 0 %}
                                                <ul class="list-style-type">
                                                    {% for i in services.value %}
                                                        <li>{{ i }}</li>
                                                    {% endfor %}
                                                </ul>
                                            {% endunless %}
                                            {% if section.settings.tab_button != blank %}
                                                <a href="{{ link }}" class="button button--primary button--small">{{ section.settings.tab_button }}</a>
                                            {% endif %}
                                            <span class="close-tab">
                                                {% render 'icon-close-tab' %}
                                            </span>
                                        </div>
                                    </details>
                                {% endcapture %}
                                
                                {% if page_state != blank %}
                                    {% unless object_states.size == 0 %}
                                        {{ installer_block }}
                                    {% endunless %}
                                {% else %}
                                    {{ installer_block }}
                                {% endif %}


                            {% endif %}
                        {% endif %}
                {% endfor %}
            </div>
        {% endfor %}
    </div>
</div>

<script>
    window.addEventListener("DOMContentLoaded", (event) => {
        document.querySelectorAll('.close-tab').forEach(e=> {
            e.addEventListener('click', function() {
                var panel = e.closest('details')
                panel.removeAttribute('open')
            })
        })

        document.querySelectorAll('.tab-detail').forEach(e => {
            e.addEventListener('click', function() {
                document.querySelectorAll('.tab-detail').forEach(element => {
                    if (element !== e) {
                        element.removeAttribute('open');
                    }
                });
            });
        });
    
        document.querySelectorAll('.tab-flex').forEach(e => {
            var img = e.querySelector('img')
            var link = e.querySelector('.accent-link')

            if (link != null && link.offsetWidth > 215) {
                link.classList.add('link-max')
            }

            if (img == null) return;

            const aspectRatio = img.clientWidth / img.clientHeight;
            const ratio = 1 / aspectRatio * 100;
    
            if (Number(ratio.toFixed(2)) >= 23 ) {
                img.closest('.no-aspect').classList.add('square-ratio')
                img.closest('.t-flex-column').classList.add('square-column')
            } else {
                img.closest('.no-aspect').classList.add('landscape-ratio')
                img.closest('.t-flex-column').classList.add('lscape-column')
            }
        });
    });
</script>

{% schema %}
{
    "name": "Partners Listing",
    "class": "section k-partners-listing",
    "tag": "section",
    "enabled_on": {
        "templates": ["page"]
    },
    "blocks": [
        {
        "type": "column",
        "name": "Column",
        "limit": 2,
        "settings": [
            {
                "type": "text",
                "id": "meta_name",
                "label": "Metaobject name",
                "info": "Metaobject type: https://prnt.sc/k5RKwo_v0vaW"
            },
            {
                "type": "text",
                "id": "country",
                "label": "Country"
            },
            {
                "type": "inline_richtext",
                "id": "title",
                "default": "Multicolumn",
                "label": "t:sections.multicolumn.settings.title.label",
                "info": "[country] as Metaobject's country reference"
            },
            {
                "type": "select",
                "id": "heading_size",
                "options": [
                {
                    "value": "h2",
                    "label": "t:sections.all.heading_size.options__1.label"
                },
                {
                    "value": "h1",
                    "label": "t:sections.all.heading_size.options__2.label"
                },
                {
                    "value": "h0",
                    "label": "t:sections.all.heading_size.options__3.label"
                }
                ],
                "default": "h1",
                "label": "t:sections.all.heading_size.label"
            },
            {
                "type": "inline_richtext",
                "id": "subtitle",
                "default": "Multicolumn",
                "label": "Subheading",
                "info": "[country] as Metaobject's country reference"
            },
            {
                "type": "text",
                "id": "link_label",
                "label": "Link Label"
            }
        ]
        }
    ],
    "settings": [
        {
        "type": "text",
        "id": "country",
        "label": "Country"
        },
        {
            "type": "text",
            "id": "state",
            "label": "State"
        },
        {
        "type": "inline_richtext",
        "id": "title",
        "default": "Multicolumn",
        "label": "t:sections.multicolumn.settings.title.label",
        "info": "[country] as Metaobject's country reference"
        },
        {
        "type": "select",
        "id": "heading_size",
        "options": [
            {
            "value": "h2",
            "label": "t:sections.all.heading_size.options__1.label"
            },
            {
            "value": "h1",
            "label": "t:sections.all.heading_size.options__2.label"
            },
            {
            "value": "h0",
            "label": "t:sections.all.heading_size.options__3.label"
            }
        ],
        "default": "h1",
        "label": "t:sections.all.heading_size.label"
        },
        {
            "type": "header",
            "content": "Tab Contents"
        },
        {
            "type": "text",
            "id": "tab_subtitle",
            "label": "Tab Subheading"
        },
        {
            "type": "text",
            "id": "tab_button",
            "label": "Tab Button label"
        },
        {
        "type": "select",
        "id": "color_scheme",
        "options": [
            {
            "value": "accent-1",
            "label": "t:sections.all.colors.accent_1.label"
            },
            {
            "value": "accent-2",
            "label": "t:sections.all.colors.accent_2.label"
            },
            {
            "value": "background-1",
            "label": "t:sections.all.colors.background_1.label"
            },
            {
            "value": "background-2",
            "label": "t:sections.all.colors.background_2.label"
            },
            {
            "value": "inverse",
            "label": "t:sections.all.colors.inverse.label"
            }
        ],
        "default": "background-1",
        "label": "t:sections.all.colors.label"
        },
        {
        "type": "header",
        "content": "t:sections.all.padding.section_padding_heading"
        },
        {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_top",
        "default": 36
        },
        {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_bottom",
        "default": 36
        }
    ],
    "presets": [
        {
            "name": "Partners Listing"
        }
    ]
}
{% endschema %}