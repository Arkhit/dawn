<style>
  @keyframes tapped {
    0% {
      opacity: 1;
      transform: translate(-50%, -50%) scale(0.95)
    }
    50% {
      opacity: 1;
      transform: translate(-50%, -50%) scale(1);
    }
    100% {
      opacity: 0;
      transform: translate(-50%, -50%) scale(0.95);
    }
  }

  .portrait-video-section-{{section.id}} {
    position: relative;
  }

  .portrait-video-section-{{section.id}} video {
    display: block;
    max-height: 100vh;
    width: 100%;
  }

  #shopify-section-announcement-bar {
    display: none;
  }

  .portrait-video-section-{{section.id}} .endoverlay * {
    color: white;
  }

  .portrait-video-section-{{section.id}} .video-wrapper {
    position: relative;
  }

  .portrait-video-section-{{section.id}} .video-wrapper .replay {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background-color: rgba(37, 36, 34, 0.85);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 5;
  }
  
  .portrait-video-section-{{section.id}} .video-wrapper .replay {
    display: none;
  }
  
  .portrait-video-section-{{section.id}} .video-wrapper .replay.show {
    display: flex;
  }
  
  .portrait-video-section-{{section.id}} .video-wrapper .mute,
  .portrait-video-section-{{section.id}} .video-wrapper .unmute {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: rgba(37, 36, 34, 1);
    width: 60px;
    height: 60px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 40px;
    opacity: 0;
  }

  .portrait-video-section-{{section.id}} .video-wrapper .mute.show,
  .portrait-video-section-{{section.id}} .video-wrapper .unmute.show {
    animation-name: tapped;
    animation-duration: 1s;
  }

  .portrait-video-section-{{section.id}} .video-wrapper .mute path,
  .portrait-video-section-{{section.id}} .video-wrapper .unmute path,
  .portrait-video-section-{{section.id}} .video-wrapper .replay path {
    fill: white;
  }
  
  .portrait-video-section-{{section.id}} .endoverlay .content-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
  }

  .portrait-video-section-{{section.id}} .endoverlay .content-container .buttons {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }

  .portrait-video-section-{{section.id}} .endoverlay .content-container .buttons a[href="#replayVideo"] {
    margin-top: 16px;
  }
  
  .portrait-video-section-{{section.id}} .endoverlay .content-container .button--secondary {
    color: rgb(37, 36, 34);
  }
</style>

<div class="portrait-video-section-{{section.id}}">
  <div class="video-wrapper">
    <div class="replay">
      <svg width="24" height="32" viewBox="0 0 384 512"><path fill="currentColor" d="M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80v352c0 17.4 9.4 33.4 24.5 41.9S58.2 482 73 473l288-176c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z"/></svg>
    </div>
    <div class="mute show">
      <svg width="36" height="32" viewBox="0 0 576 512"><path fill="currentColor" d="M301.1 34.8C312.6 40 320 51.4 320 64v384c0 12.6-7.4 24-18.9 29.2s-25 3.1-34.4-5.3L131.8 352H64c-35.3 0-64-28.7-64-64v-64c0-35.3 28.7-64 64-64h67.8L266.7 40.1c9.4-8.4 22.9-10.4 34.4-5.3zM425 167l55 55l55-55c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9l-55 55l55 55c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-55-55l-55 55c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l55-55l-55-55c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0z"/></svg>
    </div>
    <div class="unmute">
      <svg width="40" height="32" viewBox="0 0 640 512"><path fill="currentColor" d="M533.6 32.5C598.5 85.3 640 165.8 640 256s-41.5 170.8-106.4 223.5c-10.3 8.4-25.4 6.8-33.8-3.5s-6.8-25.4 3.5-33.8c54.2-44 88.7-111 88.7-186.2s-34.5-142.2-88.7-186.3c-10.3-8.4-11.8-23.5-3.5-33.8s23.5-11.8 33.8-3.5zM473.1 107c43.2 35.2 70.9 88.9 70.9 149s-27.7 113.8-70.9 149c-10.3 8.4-25.4 6.8-33.8-3.5s-6.8-25.4 3.5-33.8C475.3 341.3 496 301.1 496 256s-20.7-85.3-53.2-111.8c-10.3-8.4-11.8-23.5-3.5-33.8s23.5-11.8 33.8-3.5zm-60.5 74.5c21.5 17.6 35.4 44.4 35.4 74.5s-13.9 56.9-35.4 74.5c-10.3 8.4-25.4 6.8-33.8-3.5s-6.8-25.4 3.5-33.8C393.1 284.4 400 271 400 256s-6.9-28.4-17.7-37.3c-10.3-8.4-11.8-23.5-3.5-33.8s23.5-11.8 33.8-3.5zM301.1 34.8C312.6 40 320 51.4 320 64v384c0 12.6-7.4 24-18.9 29.2s-25 3.1-34.4-5.3L131.8 352H64c-35.3 0-64-28.7-64-64v-64c0-35.3 28.7-64 64-64h67.8L266.7 40.1c9.4-8.4 22.9-10.4 34.4-5.3z"/></svg>
    </div>
    {{ section.settings.video | video_tag: autoplay: false, playsinline: true, webkit-playsinline: true, controls: false, muted: true, autoplay: true, image_size: "600x" }}
  </div>
</div>

<script>
  const video = document.querySelector(".portrait-video-section-{{section.id}} video");

  const muteButton = document.querySelector(".portrait-video-section-{{section.id}} .mute")
  const unmuteButton = document.querySelector(".portrait-video-section-{{section.id}} .unmute")
  const replayButton = document.querySelector(".portrait-video-section-{{section.id}} .replay")

  const restartVideo = (video) => {
    video.pause();
    video.currentTime = '0';
    video.play();
  }

  const handleMuteUnmute = (video) => {
    muteButton.classList.remove("show")
    unmuteButton.classList.remove("show")
    if(video.muted) {
      unmuteButton.classList.add("show")
    } else {
      muteButton.classList.add("show")
    }
    video.muted = !video.muted;
  }

  video.addEventListener("click", () => handleMuteUnmute(video))

  if(replayButton) {
    replayButton.addEventListener("click", e => {
      console.log("click");
      e.preventDefault();
      restartVideo(video);
    })
  }
  
  video.addEventListener('play', function() {
    muteButton.addEventListener("click", () => handleMuteUnmute(video))
    unmuteButton.addEventListener("click", () => handleMuteUnmute(video))
    if( replayButton ) replayButton.classList.remove("show");
  });

  video.addEventListener('ended', function() {
    muteButton.removeEventListener("click", () => handleMuteUnmute(video))
    unmuteButton.removeEventListener("click", () => handleMuteUnmute(video))

    if( replayButton ) replayButton.classList.add("show");
    {% if section.settings.scroll_down_when_video_ends %}
      location.hash = "#scrollAnchor";
    {% endif %}
  });
</script>

{% schema %}
{
  "name": "Portrait Video",
  "tag": "section",
  "settings": [
    {
      "type": "video",
      "label": "Video",
      "id": "video"
    },
    {
      "type": "checkbox",
      "label": "Scroll down when video ends",
      "id": "scroll_down_when_video_ends",
      "default": false
    },
    {
      "type": "url",
      "label": "Scroll anchor",
      "id": "scroll_anchor"
    }
  ],
  "presets": [
    {
      "name": "Portrait Video"
    }
  ]
}
{% endschema %}
