{% assign related_products = collections.first.products %}

<div class="ml-base mb-mega">
  <div>
    <div
      id="related-products-carousel"
      class="splide"
      aria-label="carousel with thumbnail"
    >
      <div class="relative flex justify-between mr-base items-center mb-base">
        <h1 class="text-t-md">Related products</h1>

        <div class="splide__arrows flex gap-base">
          <button class="bg-grey50 rounded-full cursor-pointer flex w-8 h-8 py-3 justify-center items-center  splide__arrow splide__arrow--prev">
            {% comment %} {% render 'icon-chevron-right' %} {% endcomment %}
            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
              <g id="chevron">
              <path id="Vector 2" d="M11 2L5 8L11 14" stroke="#767676"/>
              </g>
            </svg>
          </button>

          <button class="bg-grey50 rounded-full cursor-pointer flex w-8 h-8 py-3 justify-center items-center  splide__arrow splide__arrow--next">
            {% comment %} {% render 'icon-chevron-right' %} {% endcomment %}
            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
              <g id="chevron">
              <path id="Vector 2" d="M5 14L11 8L5 2" stroke="black"/>
              </g>
            </svg>
          </button>
        </div>
      </div>

      <div class="relative">
        <div class="splide__track">
          <ul class="splide__list">
            {% for product in related_products %}
              {% if forloop.index != related_products.size %}
                {% assign class = 'border-r-0' %}
              {% endif %}

              <li class="splide__slide">
                {% render 'product-card', product: product, class: class %}
              </li>
            {% endfor %}
          </ul>
        </div>
      </div>
    </div>
  </div>
</div>
