{{ 'splide-core.min.css' | asset_url | stylesheet_tag }}
{{ 'splide-data.css' | asset_url | stylesheet_tag }}

{% liquid
  assign products = section.settings.collection.products
  assign carousel_id = 'Collection-Carousel-' | append: section.id
%}

<div
  class="related-products block"
>
  {% unless products.size == 0 %}
    <div
      id="{{carousel_id}}"
      class="splide"
      aria-label="carousel with thumbnail"
    >
      <div class="relative flex justify-between mr-base items-center mb-base">
        <h1 class="text-h-md">{{ section.settings.heading }}</h1>

        <div class="splide__arrows flex gap-base">
          {% render 'prev', class: 'splide__arrow splide__arrow--prev' %}
          {% render 'next', class: 'splide__arrow splide__arrow--next' %}
        </div>
      </div>

      <div class="relative">
        <div class="splide__track">
          <ul class="splide__list">
            {% for product in products limit: section.settings.products_to_show %}
              <li class="splide__slide">
                {% render 'product-card', product: product, class: '!border-0' %}
              </li>
            {% endfor %}
          </ul>
        </div>
      </div>
    </div>
  {% endunless %}
</div>

{% unless products.size == 0 %}
  <script src="{{ 'splide.min.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'splide-collection-carousel.js' | asset_url }}" defer="defer"></script>
{% endunless %}

{% schema %}
{
  "name": "t:sections.collection-carousel.name",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "default": "Recently Added",
      "label": "t:sections.collection-carousel.settings.heading.label"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 20,
      "step": 1,
      "default": 10,
      "label": "t:sections.collection-carousel.settings.products_to_show.label"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "t:sections.collection-carousel.settings.collection.label"
    }
  ],
  "presets": [
    {
      "name": "t:sections.collection-carousel.presets.name"
    }
  ]
}
{% endschema %}
