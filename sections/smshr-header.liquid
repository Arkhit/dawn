<link rel="stylesheet" href="{{ 'component-list-menu.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-search.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'smshr-menu-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
<link
  rel="stylesheet"
  href="{{ 'component-cart-notification.css' | asset_url }}"
  media="print"
  onload="this.media='all'"
>
<link rel="stylesheet" href="{{ 'component-cart-items.css' | asset_url }}" media="print" onload="this.media='all'">

{% comment %}
  {%- if settings.predictive_search_enabled -%}
    <link rel="stylesheet" href="{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
  {%- endif -%}
{% endcomment %}

<script src="{{ 'details-disclosure.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'details-modal.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'cart-notification.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'search-form.js' | asset_url }}" defer="defer"></script>

<header class="bg-white w-full p-base sm:px-large border-b border-b-grey100">
  <div class="w-full flex items-center justify-between">
    <a href="/">
      {% render 'icon-logo' %}
    </a>

    {% render 'smshr-mega-menu' %}

    <div class="flex gap-large">
      <div class="w-large h-large flex justify-center items-center">{% render 'icon-search' %}</div>

      <a
        href="{{ routes.cart_url }}"
        id="cart-icon-bubble"
        class="w-large h-large flex justify-center items-center smshr-cart"
      >
        {%- render 'icon-cart', count: cart.item_count -%}

        <span class="visually-hidden">{{ 'templates.cart.cart' | t }}</span>
      </a>

      <div class="w-large h-large flex justify-center items-center">{% render 'icon-user' %}</div>

      {% render 'smshr-header-drawer' %}
    </div>
  </div>
</header>

{%- render 'cart-notification', desktop_menu_type: 'mega' -%}
{% comment %}
  {% javascript %}
    class StickyHeader extends HTMLElement {
      constructor() {
        super();
      }

      connectedCallback() {
        this.header = document.querySelector('.section-header');
        this.headerIsAlwaysSticky =
          this.getAttribute('data-sticky-type') === 'always' ||
          this.getAttribute('data-sticky-type') === 'reduce-logo-size';
        this.headerBounds = {};

        this.setHeaderHeight();

        window.matchMedia('(max-width: 990px)').addEventListener('change', this.setHeaderHeight.bind(this));

        if (this.headerIsAlwaysSticky) {
          this.header.classList.add('shopify-section-header-sticky');
        }

        this.currentScrollTop = 0;
        this.preventReveal = false;
        this.predictiveSearch = this.querySelector('predictive-search');

        this.onScrollHandler = this.onScroll.bind(this);
        this.hideHeaderOnScrollUp = () => (this.preventReveal = true);

        this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
        window.addEventListener('scroll', this.onScrollHandler, false);

        this.createObserver();
      }

      setHeaderHeight() {
        document.documentElement.style.setProperty('--header-height', `${this.header.offsetHeight}px`);
      }

      disconnectedCallback() {
        this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
        window.removeEventListener('scroll', this.onScrollHandler);
      }

      createObserver() {
        let observer = new IntersectionObserver((entries, observer) => {
          this.headerBounds = entries[0].intersectionRect;
          observer.disconnect();
        });

        observer.observe(this.header);
      }

      onScroll() {
        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

        if (this.predictiveSearch && this.predictiveSearch.isOpen) return;

        if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
          this.header.classList.add('scrolled-past-header');
          if (this.preventHide) return;
          requestAnimationFrame(this.hide.bind(this));
        } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
          this.header.classList.add('scrolled-past-header');
          if (!this.preventReveal) {
            requestAnimationFrame(this.reveal.bind(this));
          } else {
            window.clearTimeout(this.isScrolling);

            this.isScrolling = setTimeout(() => {
              this.preventReveal = false;
            }, 66);

            requestAnimationFrame(this.hide.bind(this));
          }
        } else if (scrollTop <= this.headerBounds.top) {
          this.header.classList.remove('scrolled-past-header');
          requestAnimationFrame(this.reset.bind(this));
        }

        this.currentScrollTop = scrollTop;
      }

      hide() {
        if (this.headerIsAlwaysSticky) return;
        this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
        this.closeMenuDisclosure();
        this.closeSearchModal();
      }

      reveal() {
        if (this.headerIsAlwaysSticky) return;
        this.header.classList.add('shopify-section-header-sticky', 'animate');
        this.header.classList.remove('shopify-section-header-hidden');
      }

      reset() {
        if (this.headerIsAlwaysSticky) return;
        this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky', 'animate');
      }

      closeMenuDisclosure() {
        this.disclosures = this.disclosures || this.header.querySelectorAll('header-menu');
        this.disclosures.forEach((disclosure) => disclosure.close());
      }

      closeSearchModal() {
        this.searchModal = this.searchModal || this.header.querySelector('details-modal');
        this.searchModal.close(false);
      }
    }

    customElements.define('sticky-header', StickyHeader);
  {% endjavascript %}
{% endcomment %}

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": {{ shop.name | json }},
    {% if settings.logo %}
      "logo": {{ settings.logo | image_url: width: 500 | prepend: "https:" | json }},
    {% endif %}
    "url": {{ request.origin | append: page.url | json }}
  }
</script>

{%- if request.page_type == 'index' -%}
  {% assign potential_action_target = request.origin | append: routes.search_url | append: '?q={search_term_string}' %}
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": {{ shop.name | json }},
      "potentialAction": {
        "@type": "SearchAction",
        "target": {{ potential_action_target | json }},
        "query-input": "required name=search_term_string"
      },
      "url": {{ request.origin | append: page.url | json }}
    }
  </script>
{%- endif -%}

{% schema %}
{
  "name": "t:sections.header.name",
  "class": "section-header",
  "settings": [
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "t:sections.header.settings.menu.label"
    }
  ]
}
{% endschema %}
