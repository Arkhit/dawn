{%- if section.blocks.size > 0 -%}

  {{ 'section-multicolumn.css' | asset_url | stylesheet_tag }}
	{{ 'multicolumn-ugc.css' | asset_url | stylesheet_tag }}
	{{ 'component-slider.css' | asset_url | stylesheet_tag }}

	{%- style -%}
		.section-{{ section.id }}-padding {
			padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
			padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
		}

		@media screen and (min-width: 750px) {
			.section-{{ section.id }}-padding {
				padding-top: {{ section.settings.padding_top }}px;
				padding-bottom: {{ section.settings.padding_bottom }}px;
			}
		}

    /* custom css */
    .custom_multicolumn-card__info-{{ section.id }} h3{
      line-height: 130%;
      {% comment %} color: #1D1D1F; {% endcomment %}
      max-width: {{ section.settings.heading_max_width }}%;
      margin: 0 auto !important;
    }
    .custom_multicolumn-card__info-{{ section.id }} p{
      font-size: 20px;
      line-height: 130%;
      color: inherit;
      max-width: {{section.settings.sub_heading_max_width}}%;
      margin: 0 auto !important;
      letter-spacing: -0.02em;
    }
    .custom_multicolumn-card__info-{{ section.id }} {
      word-wrap: break-word;
    }
    @media screen and (max-width: 749px) {
      .custom-grid--peek.slider .grid__item:last-of-type {
        padding-right: 1.5rem;
      }
    }
    @media screen and (max-width: 479px) {
      .custom_multicolumn-card__info-{{ section.id }} h3{
        max-width: 100%;
      }
      .custom_multicolumn-card__info-{{ section.id }} p{
        max-width: 100%;
      }
    }
	{%- endstyle -%}

	{%- liquid
		assign columns_mobile_int = section.settings.columns_mobile | plus: 0
		assign show_mobile_slider = false
    assign load_swiper_script = false
		if section.blocks.size > columns_mobile_int
			assign show_mobile_slider = true
      assign load_swiper_script = true
		endif
	-%}

	{%- if load_swiper_script -%}
    {{- 'swiper-bundle.min.css' | asset_url | stylesheet_tag -}}
		<script src="{{- 'swiper-bundle.min.js' | asset_url -}}" defer="defer"></script>
    <script src="{{- 'multicolumn-ugc.js' | asset_url -}}" defer="defer"></script>
	{%- endif -%}

  {%- capture data_swiper_options -%}
    "slidesPerViewMobile": {{ section.settings.columns_mobile | times: 1.3 | round: 1 }},
    "slidesPerViewDesktop": {{ section.settings.columns_desktop }},
    "spaceBetweenMobile": {{ section.settings.space_between_mobile }},
    "spaceBetweenDesktop": {{ section.settings.space_between_desktop }},
    "slidesOffsetBeforeMobile": {{ section.settings.space_between_mobile }},
    "slidesOffsetBeforeDesktop": 0,
  {%- endcapture -%}
  {%- assign data_swiper_options = data_swiper_options | strip_newlines | remove_last: ',' -%}
  {%- assign data_swiper_options = '{' | append: data_swiper_options | append: '}' -%}

  {%- liquid
    assign highest_ratio = 0
    for block in section.blocks
      if block.settings.image.aspect_ratio > highest_ratio
        assign highest_ratio = block.settings.image.aspect_ratio
      endif
    endfor
  -%}

  {%- for block in section.blocks -%}

    {%- capture block_html -%}
      <div class="multicolumn-card content-container">
        {%- if block.settings.image != blank or block.settings.video -%}
          {% if section.settings.image_ratio == 'adapt' or section.settings.image_ratio == 'circle' %}
            {% assign spaced_image = true %}
          {% endif %}
          <div class="multicolumn-card__image-wrapper multicolumn-card__image-wrapper--{{ section.settings.image_width }}-width{% if section.settings.image_width != 'full' or spaced_image %} multicolumn-card-spacing{% endif %}">
            <div class="media media--transparent media--{{ section.settings.image_ratio }}"
              {% if section.settings.image_ratio == 'adapt' %}
                style="padding-bottom: {{ 1 | divided_by: highest_ratio | times: section.settings.image_size }}%;"
              {% endif %}>


              {% unless block.settings.video %}
              <img
                class="multicolumn-card__image"
                srcset="{%- if block.settings.image.width >= 275 -%}{{ block.settings.image | image_url: width: 275 }} 275w,{%- endif -%}
                  {%- if block.settings.image.width >= 550 -%}{{ block.settings.image | image_url: width: 550 }} 550w,{%- endif -%}
                  {%- if block.settings.image.width >= 710 -%}{{ block.settings.image | image_url: width: 710 }} 710w,{%- endif -%}
                  {%- if block.settings.image.width >= 1420 -%}{{ block.settings.image | image_url: width: 1420 }} 1420w,{%- endif -%}
                  {{ block.settings.image | image_url }} {{ block.settings.image.width }}w"
                src="{{ block.settings.image | image_url: width: 550 }}"
                sizes="(min-width: 990px) {% if section.blocks.size <= 2 %}710px{% else %}550px{% endif %},
                  (min-width: 750px) {% if section.blocks.size == 1 %}710px{% else %}550px{% endif %},
                  (max-width: 560px) 300px,
                  calc(100vw - 30px)"
                alt="{{ block.settings.image.alt }}"
                height="{{ block.settings.image.height }}"
                width="{{ block.settings.image.width }}"
                loading="lazy"
              >
              {% else %}
                <video
                  {% if block.settings.video_loop %}
                    loop="loop"
                  {% endif %}
                  playsinline="playsinline"
                  controls="controls"
                  {% if block.settings.video_autoplay %}
                    autoplay="autoplay"
                  {% endif %}
                  muted="muted"
                  class="lazy"
                  preload="metadata"
                >
                  <source data-src="{{ block.settings.video.sources[1].url }}" type="video/mp4">
                </video>
              {% endunless %}
            </div>
          </div>
        {%- endif -%}
        <div class="multicolumn-card__info custom_multicolumn-card__info-{{ section.id }}">
          {%- if block.settings.title != blank -%}
            <h3 style="{% if block.settings.col_heading_font_size %}font-size:{{ block.settings.col_heading_font_size }}px;{% endif %}">{{ block.settings.title | escape }}</h3>
          {%- endif -%}
          {%- if block.settings.text != blank -%}
            <div class="rte" style="{% if block.settings.text_color %}color:{{ block.settings.text_color }};{% endif %}">{{ block.settings.text }}</div>
          {%- endif -%}
          {%- if block.settings.founder_text != blank -%}
            <div class="rte" style="{% if block.settings.founder_color %}color:{{ block.settings.founder_color }};{% endif %}font-size:20px;letter-spacing: -0.02em;">{{ block.settings.founder_text }}</div>
          {%- endif -%}
          {%- if block.settings.link_label != blank -%}
            <a class="link animate-arrow" {% if block.settings.link == blank %}role="link" aria-disabled="true"{% else %}href="{{ block.settings.link }}"{% endif %}>{{ block.settings.link_label | escape }}<span class="icon-wrap">&nbsp;{% render 'icon-arrow' %}</span></a>
          {%- endif -%}
        </div>
        {%- if block.settings.username != blank -%}
          <div class="multicolumn-card__username rte">
            {{ block.settings.username }}
          </div>
        {%- endif -%}
      </div>
    {%- endcapture -%}

    {%- capture block_html -%}
      <div class="swiper-slide multicolumn__swiper-slide multicolumn-list__item {% if section.settings.swipe_on_mobile %} slider__slide{% endif %}{% if section.settings.column_alignment == 'center' %} center{% endif %}{{ empty_column }}" {{ block.shopify_attributes }}>
        {{ block_html }}
      </div>
    {%- endcapture -%}

    {%- assign blocks_html = blocks_html | append: block_html -%}

  {%- endfor -%}

  <section class="multicolumn multicolumn-ugc color-{{ section.settings.color_scheme }} gradient{% unless section.settings.background_style == 'none' and settings.text_boxes_border_thickness > 0 or settings.text_boxes_shadow_opacity > 0 %} background-{{ section.settings.background_style }}{% endunless %}{% if section.settings.title == blank %} no-heading{% endif %} section-{{ section.id }}-padding">

    <div class="page-width">
      {%- unless section.settings.title == blank -%}
        <div class="title-wrapper-with-link title-wrapper--self-padded-mobile title-wrapper--no-top-margin {% if section.settings.heading_center %}center{% endif %}">
          <h3 class="title {{ section.settings.heading_size }}">
            {{ section.settings.title | escape }}
          </h3>
          {%- if section.settings.subtitle -%}
            <div class="subtitle">{{ section.settings.subtitle }}</div>
          {%- endif -%}
          {%- if section.settings.button_label != blank -%}
            <a href="{{ section.settings.button_link }}" class="link underlined-link large-up-hide" {% if section.settings.button_bgcolor_1 != blank %}style="background-color: {{ section.settings.button_bgcolor_1 }};color: {{section.settings.button_txtcolor_1}};"{% endif %}>{{ section.settings.button_label | escape }}</a>
          {%- endif -%}
        </div>
      {%- endunless -%}
    </div>

    <div class="container page-width isolate">
      <multicolumn-ugc
        class="swiper multicolumn__swiper"
        data-swiper-options='{{- data_swiper_options -}}'
      >
        <div class="swiper-wrapper multicolumn__swiper-wrapper">
          {{ blocks_html }}
        </div><!-- /.swiper-wrapper -->
        <div class="swiper-pagination multicolumn__swiper-pagination"></div>
      </multicolumn-ugc>
    </div>
  </section>
{%- endif -%}

<script>
  document.addEventListener('DOMContentLoaded', function () {
    var lazyVideos = [].slice.call(document.querySelectorAll('video.lazy'));

    if ('IntersectionObserver' in window) {
      var lazyVideoObserver = new IntersectionObserver(function (entries, observer) {
        entries.forEach(function (video) {
          if (video.isIntersecting) {
            for (var source in video.target.children) {
              var videoSource = video.target.children[source];
              if (typeof videoSource.tagName === 'string' && videoSource.tagName === 'SOURCE') {
                videoSource.src = videoSource.dataset.src;
              }
            }

            video.target.load();
            video.target.classList.remove('lazy');
            lazyVideoObserver.unobserve(video.target);
          }
        });
      });

      lazyVideos.forEach(function (lazyVideo) {
        lazyVideoObserver.observe(lazyVideo);
      });
    }
  });
</script>

{% schema %}
{
  "name": "t:sections.multicolumn-ugc.name",
  "class": "section section--multicolumn-ugc",
  "tag": "section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "default": "Multicolumn UGC",
      "label": "t:sections.multicolumn.settings.title.label"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "checkbox",
      "id": "heading_center",
      "default": false,
      "label": "Center align heading"
    },
    {
      "type": "richtext",
      "id": "subtitle",
      "label": "t:sections.multicolumn-ugc.settings.subtitle.label"
    },
    {
      "type": "select",
      "id": "image_width",
      "options": [
        {
          "value": "third",
          "label": "t:sections.multicolumn.settings.image_width.options__1.label"
        },
        {
          "value": "half",
          "label": "t:sections.multicolumn.settings.image_width.options__2.label"
        },
        {
          "value": "full",
          "label": "t:sections.multicolumn.settings.image_width.options__3.label"
        }
      ],
      "default": "full",
      "label": "t:sections.multicolumn.settings.image_width.label"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.multicolumn.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.multicolumn.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.multicolumn.settings.image_ratio.options__3.label"
        },
        {
          "value": "circle",
          "label": "t:sections.multicolumn.settings.image_ratio.options__4.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.multicolumn.settings.image_ratio.label"
    },
    {
      "type": "range",
      "id": "image_size",
      "min": 10,
      "max": 100,
      "step": 10,
      "default": 100,
      "label": "Image size in %"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 3,
      "label": "t:sections.multicolumn.settings.columns_desktop.label"
    },
    {
      "type": "select",
      "id": "column_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.multicolumn.settings.column_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.multicolumn.settings.column_alignment.options__2.label"
        }
      ],
      "default": "left",
      "label": "t:sections.multicolumn.settings.column_alignment.label"
    },
    {
      "type": "number",
      "id": "space_between_desktop",
      "label": "t:sections.multicolumn.settings.space_between_desktop.label",
      "default": 28
    },
    {
      "type": "select",
      "id": "background_style",
      "options": [
        {
          "value": "none",
          "label": "t:sections.multicolumn.settings.background_style.options__1.label"
        },
        {
          "value": "primary",
          "label": "t:sections.multicolumn.settings.background_style.options__2.label"
        }
      ],
      "default": "primary",
      "label": "t:sections.multicolumn.settings.background_style.label"
    },
    {
      "type": "text",
      "id": "button_label",
      "default": "Button label",
      "label": "t:sections.multicolumn.settings.button_label.label"
    },
    {
      "type": "color",
      "id": "button_bgcolor_1",
      "label": "button background color"
    },
    {
      "type": "color",
      "id": "button_txtcolor_1",
      "label": "button Text color"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "t:sections.multicolumn.settings.button_link.label"
    },
    {
      "type": "select",
      "id": "color_scheme",
      "options": [
        {
          "value": "accent-1",
          "label": "t:sections.all.colors.accent_1.label"
        },
        {
          "value": "accent-2",
          "label": "t:sections.all.colors.accent_2.label"
        },
        {
          "value": "background-1",
          "label": "t:sections.all.colors.background_1.label"
        },
        {
          "value": "background-2",
          "label": "t:sections.all.colors.background_2.label"
        },
        {
          "value": "inverse",
          "label": "t:sections.all.colors.inverse.label"
        }
      ],
      "default": "background-1",
      "label": "t:sections.all.colors.label"
    },
    {
      "type": "header",
      "content": "Additional header settings"
    },
    {
        "type": "number",
        "info":"unit in percentage",
        "id": "heading_max_width",
        "label": "Heading Max-width",
        "default": 70
    },
    {
        "type": "number",
        "info":"unit in percentage",
        "id": "sub_heading_max_width",
        "label": "SubHeading Max-width",
        "default": 70
    },
    {
      "type": "header",
      "content": "t:sections.multicolumn.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "options": [
        {
          "value": "1",
          "label": "t:sections.multicolumn.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.multicolumn.settings.columns_mobile.options__2.label"
        }
      ],
      "default": "1",
      "label": "t:sections.multicolumn.settings.columns_mobile.label"
    },
    {
      "type": "number",
      "id": "space_between_mobile",
      "label": "t:sections.multicolumn.settings.space_between_mobile.label",
      "default": 12
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "column",
      "name": "t:sections.multicolumn.blocks.column.name",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "t:sections.multicolumn.blocks.column.settings.image.label"
        },
        {
          "type": "video",
          "id": "video",
          "label": "t:sections.multicolumn.blocks.column.settings.video.label"
        },
        {
          "type": "checkbox",
          "id": "video_autoplay",
          "default": false,
          "label": "t:sections.multicolumn.blocks.column.settings.video_autoplay.label"
        },
        {
          "type": "checkbox",
          "id": "video_loop",
          "default": false,
          "label": "t:sections.multicolumn.blocks.column.settings.video_loop.label"
        },
        {
          "type": "text",
          "id": "title",
          "label": "t:sections.multicolumn.blocks.column.settings.title.label"
        },
        {
          "type": "text",
          "id": "username",
          "label": "t:sections.multicolumn-ugc.blocks.column.settings.username.label"
        },
        {
          "type": "number",
          "id": "col_heading_font_size",
          "label": "Column Heading Font Size",
          "default": 20,
          "info":"unit in px"
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "t:sections.multicolumn.blocks.column.settings.text.label"
        },
        {
          "type": "color",
          "id": "text_color",
          "label": "Text color",
          "default": "#9C9C9C"
        },
        {
          "type": "text",
          "id": "founder_text",
          "label": "Additional Text"
        },
        {
          "type": "color",
          "id": "founder_color",
          "label": "Additional Text color",
          "default": "#757470"
        },
        {
          "type": "text",
          "id": "link_label",
          "label": "t:sections.multicolumn.blocks.column.settings.link_label.label"
        },
        {
          "type": "url",
          "id": "link",
          "label": "t:sections.multicolumn.blocks.column.settings.link.label"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Multicolumn UGC",
      "blocks": [
        {
          "type": "column"
        },
        {
          "type": "column"
        },
        {
          "type": "column"
        }
      ]
    }
  ]
}
{% endschema %}
