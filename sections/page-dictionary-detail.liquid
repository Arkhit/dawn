{% assign _has_detail = 'true' %}
{% if has_detail != blank %}
  {% assign _has_detail = has_detail %}
{% endif %}

{{ 'dictionary-detail.css' | asset_url | stylesheet_tag }}
{{ 'store-infomation.css' | asset_url | stylesheet_tag }}
{{ 'area-detail.css' | asset_url | stylesheet_tag }}
{% assign maker = metaobject.maker.value %}
{% assign area = metaobject.area.value %}
{% assign stores = maker.stores.value %}

<script>
  {% comment %}console.log({{ metaobject | json }}, {{ stores | json }}){% endcomment %}
</script>

<div
  class="dictionary-detail"
>
  <div class="breadcrumb">
    <ul>
      <li><a href="/pages/wagashipedia/">Wagashipedia</a></li>
      <li>{{ metaobject.title_en }}</li>
    </ul>
  </div>
  <div class="dictionary-detail-kv">
    <div class="dictionary-detail-kv-image-box">
      <picture>
        {% if metaobject.key_visual_mobile != blank %}
          <source srcset="{{ metaobject.key_visual_mobile | img_url: '780x908' }}" media="(max-width: 768px)" />
        {% endif %}
        <img src="{{ metaobject.key_visual | img_url: '1920x1200' }}" alt="" class="dictionary-detail-kv-image {% if metaobject.key_visual_mobile != blank %}has-mobile{% endif %}" />
      </picture>
    </div>
    <div class="page-width">
      <div class="dictionary-detail-kv-body">
        <div>
          <hgroup>
            <p class="dictionary-detail-kv-title" {% if metaobject.english_title_color %}style="color: {{ metaobject.english_title_color }}"{% endif %}>{{ metaobject.title }}</p>
            <h1 class="dictionary-detail-kv-title-en" {% if metaobject.primary_color %}style="color: {{ metaobject.primary_color }}"{% endif %}>{{ metaobject.title_en }}</h1>
          </hgroup>
          <p class="dictionary-detail-kv-description" {% if metaobject.english_title_color %}style="color: {{ metaobject.english_title_color }}"{% endif %}>{{ metaobject.description | newline_to_br }}</p>
        </div>
      </div>
    </div>
  </div>
  {% if metaobject.catch_copy != blank %}
  <div class="dictionary-detail-catch-copy">
    <div class="page-width">
      <p class="dictionary-detail-catch-copy-text">
        <span class="icon-start">
          <svg width="21" height="14" viewBox="0 0 21 14" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M15.0863 4.15965C15.4587 4.05809 15.842 4.00442 16.2275 3.99988C18.8629 3.99988 21 6.23906 21 9.00117C21 11.76 18.8629 14 16.2275 14C13.5921 14 11.455 11.7608 11.455 9.00035C11.455 9.00035 11.1965 0.999765 21 0V0.999765C21 0.999765 16.9059 1.47 15.0863 4.15965ZM9.54566 9.00035C9.54647 11.76 7.41019 14 4.77396 14C2.13854 14 0.000648156 11.7608 0.000648156 9.00035C0.000648156 9.00035 -0.257805 0.999765 9.54728 0V0.999765C9.54728 0.999765 5.45321 1.47 3.63273 4.15965C4.0054 4.05809 4.38905 4.00442 4.77477 3.99988C7.411 3.99988 9.54728 6.23906 9.54728 8.99953L9.54566 9.00035Z" fill="currentColor"/></svg>
        </span>
        {{ metaobject.catch_copy | newline_to_br }}
        <span class="icon-end">
          <svg width="21" height="14" viewBox="0 0 21 14" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M5.91374 9.84035C5.54135 9.94191 5.15796 9.99558 4.77251 10.0001C2.13709 10.0001 -1.36191e-06 7.76094 -1.12044e-06 4.99882C-8.79257e-07 2.24 2.13709 2.583e-07 4.77251 4.88696e-07C7.40792 7.19092e-07 9.54501 2.23918 9.54501 4.99965C9.54501 4.99965 9.80347 13.0002 -1.90735e-06 14L-1.81995e-06 13.0002C-1.81995e-06 13.0002 4.09406 12.53 5.91374 9.84035ZM11.4543 4.99965C11.4535 2.24 13.5898 1.25953e-06 16.226 1.49e-06C18.8615 1.72039e-06 20.9994 2.23918 20.9994 4.99965C20.9994 4.99965 21.2578 13.0002 11.4527 14L11.4527 13.0002C11.4527 13.0002 15.5468 12.53 17.3673 9.84035C16.9946 9.94191 16.611 9.99558 16.2252 10.0001C13.589 10.0001 11.4527 7.76094 11.4527 5.00047L11.4543 4.99965Z" fill="currentColor"/></svg>
        </span>
      </p>
    </div>
  </div>
  {% endif %}
  {% comment %}
  <div class="page-width">
    <div>
      <p>Tags:</p>
      <ul>
        {%- for tag in metaobject.tags.value -%}
          <li>{{ tag.name }}</li>
        {%- endfor -%}
      </ul>
    </div>
  </div>
  {% endcomment %}
  <div class="dictionary-detail-images">
    <div class="page-width">
      <div class="dictionary-detail-images-items">
          {%- for image in metaobject.images.value -%}
            <div class="dictionary-detail-images-item">
              <img src="{{ image | image_url: width: 1000 }}" alt="" class="dictionary-detail-images-image">
            </div>
          {%- endfor -%}
        </div>
    </div>
  </div>

  {% if maker != blank %}
  <div class="dictionary-detail-maker">
    <header class="dictionary-detail-maker-header">
      <h2 class="dictionary-detail-maker-header-text">Spotlight the Maker</h2>
    </header>
    <div class="page-width dictionary-detail-maker-rows">
      <div class="dictionary-detail-maker-image">
        <img src="{{ maker.thumbnail | image_url: width: 1100 }}" alt="" width="550">
      </div>
      <div class="dictionary-detail-maker-body">
        <p class="dictionary-detail-maker-name">{{ maker.name }}</p>
        <p class="dictionary-detail-maker-description">{{ maker.description | newline_to_br }}</p>
        <div class="dictionary-detail-maker-more">
          <a href="/pages/maker/{{ maker.system.handle }}" class="button-more-01">Details</a>
        </div>
      </div>
    </div>
  </div>
    <script>
    let currentHighlighted = null; // 現在強調されている都道府県
  
    document.addEventListener('DOMContentLoaded', () => {
      const body = document.querySelector('.wagashi-area-section-body');
      const nameJa = document.querySelector('.wagashi-area-section-name .name-ja');
      const nameEn = document.querySelector('.wagashi-area-section-name .name-en');
      const description = document.querySelector('.wagashi-area-section-description');
      const image = document.querySelector('.wagashi-area-section-image');
      const svgPaths = document.querySelectorAll('[class^=area-]');
  
      // メタオブジェクトから都道府県名を取得
      const areaName = "{{ area.name_en | downcase }}"; 
  
      if (areaName) {  // 都道府県名が存在する場合
        const areaPath = document.querySelector(`.area-${areaName}`);  // 対応するエリアの要素を取得
        
        if (areaPath) {
          areaPath.classList.add('active'); // 該当の都道府県をactiveにする
          currentHighlighted = areaPath;  // 現在選択されているエリアを追跡
        }
      }
    });
  </script>


  {% endif %}

  {% if area != blank %}
  {% render "wagashi-area-section", area: area %}
  {% endif %}

  {% if stores != blank %}
  {% render "store-infomation", stores: stores %}
  {% endif %}
</div>

{% schema %}
  {
    "name": "Dictionary detail",
    "settings": [
      {
        "type": "text",
        "id": "id_name",
        "label": "ID名"
      }
    ]
  }
{% endschema %}