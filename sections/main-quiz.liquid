<link rel="stylesheet" href="{{ 'section-main-page.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-rte.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'quiz.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" media="print" onload="this.media='all'">
<script src="https://unpkg.com/vue@3.2.31/dist/vue.global.js"></script>
<script src="https://unpkg.com/vue-router@4"></script>

<noscript>{{ 'https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css' | stylesheet_tag }}</noscript>
<noscript>{{ 'section-main-page.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-rte.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'quiz.css' | asset_url | stylesheet_tag }}</noscript>

<div class="">
  <div id="quiz" class="hero is-warning is-fullheight">
    <!--container-->
    <div class="quiz-grid container">

      <!--columns-->
      <div class="quiz-question-container">
          <div>
            <!--qusetionContainer-->

            <div class="questionContainer" v-bind:key="questionIndex">
              <Transition
                name="custom-classes"
                enter-active-class="animate__animated animate__tada"
                leave-active-class="animate__animated animate__bounceOutRight"
              >
                <div v-bind:key="quiz.questions[questionIndex].question.name">
                  <!-- questionTitle -->
                  <div class="titleContainer">
                    <h2 class="">${ quiz.questions[questionIndex].question.heading }</h2>
                  </div>
                  <!-- quizOptions -->
                  <div class="optionContainer">
                    <template v-for="(response, index) in quiz.questions[questionIndex].question.items">
                      <template v-if="quiz.questions[questionIndex].question.type === 'SelectMultiple'">
                        <div class="option">
                            <input type="checkbox" :id="index" name="check" :value="response.text" />
                            <label :for="index" @click="selectOption(quiz.questions[questionIndex]._id, response.value)">
                              <span><!-- This span is needed to create the "checkbox" element --></span>${response.text}
                            </label>
                        </div>
                      </template>
                      <template v-if="quiz.questions[questionIndex].question.type === 'SelectOne'">
                        <div class="option">
                          <input type="radio" :id="index" name="check" :value="response.text" />
                          <label :for="index" @click="selectOption(quiz.questions[questionIndex]._id, response.value)">
                            <span><!-- This span is needed to create the "checkbox" element --></span>${response.text}
                          </label>
                        </div>
                      </template>
                    </template>
                    <template v-if="quiz.questions[questionIndex].question.type === 'TextAutocomplete' || quiz.questions[questionIndex].question.type === 'Text'">
                      <div class="option">
                        <input class="field__input" autocomplete="name" type="text" id="ContactForm-name" name="contact[Name]" value="" placeholder="">
                        <button class="pagination-next button" v-on:click="next();" :disabled="questionIndex>=quiz.questions.length">
                          Next
                        </button>
                      </div>

                    </template>
                  </div>
                  <!-- continueButton -->
                  <template v-if="showContinue">
                    <button class="pagination-next button" v-on:click="next();" :disabled="questionIndex>=quiz.questions.length">
                      Next
                    </button>
                  </template>
                </div>
              </Transition>



            </div>
            <!--/questionContainer-->

            <!--quizCompletedResult-->
            <div v-if="questionIndex >= quiz.questions.length && quizStarted" v-bind:key="questionIndex" class="quizCompleted has-text-centered">

              <!-- quizCompletedIcon: Achievement Icon -->
              <span class="icon is-large has-text-success">
                <i class="fa fa-check-circle-o fa-3x"></i>
              </span>

              <!--resultTitleBlock-->
              <h2 class="title">
                You did an amazing job!
              </h2>
              <p class="subtitle">
                Total score: ${  score() } / ${  quiz.questions.length }
              </p>
              <!--/resultTitleBlock-->

            </div>
            <!--/quizCompetedResult-->
          </div>
      </div>
      <div class="sidebar">
        <h1>SIDEBAR</h1>
        <!--quizFooter: navigation and progress-->
        <div class="questionFooter">

          <!--pagination-->
          <nav class="pagination is-centered" role="navigation" aria-label="pagination">

            <!-- prevButton -->
            <a class="pagination-previous button is-info is-rounded is-outlined" v-on:click="prev();" :disabled="questionIndex < 1">
              Previous Question
            </a>


          </nav>
          <!--/pagination-->

          <!--progress-->
          <div class="progressContainer">
            <progress class="progress is-success is-small" :value="(questionIndex/quiz.questions.length)*100" max="100">${(questionIndex/quiz.questions.length)*100}%</progress>
          </div>
          <!--/progress-->

        </div>
        <!--/quizFooter--></div>
      <!--/columns-->

    </div>
    <!--/container-->
  </div>
</div>
<script src="{{ 'quiz-questions.js' | asset_url |striptags }}"></script>
{%  schema %}
{
  "name": "t:sections.main-page.name",
  "tag": "section",
  "class": "spaced-section"
}
{% endschema %}
